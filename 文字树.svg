<svg width="800" height="600" viewBox="0 0 800 600" xmlns="http://www.w3.org/2000/svg">
  <style>
    .node { font-family: "SimHei", "黑体", sans-serif; text-anchor: middle; dominant-baseline: middle; }
    .branch { stroke: #2e7d32; stroke-width: 2; stroke-opacity: 0.7; }
  </style>
  <script type="text/javascript"><![CDATA[
    // 词组库（保持完整不分开）
    const phrases = ["腰酸背痛", "爱吃", "爱玩", "爱睡觉"];
    
    // 词组颜色映射（绿色系）
    const colors = {
      "腰酸背痛": "#1b5e20", // 深绿
      "爱吃": "#2e7d32",    // 中绿
      "爱玩": "#43a047",    // 浅绿
      "爱睡觉": "#81c784"   // 淡绿
    };
    
    // 词组字体大小映射
    const fontSizes = {
      "腰酸背痛": 22,
      "爱吃": 18,
      "爱玩": 18,
      "爱睡觉": 16
    };
    
    // 绘制二叉树节点
    function drawNode(x, y, phrase, level) {
      // 绘制词组文本
      const text = document.createElementNS("http://www.w3.org/2000/svg", "text");
      text.setAttribute("x", x);
      text.setAttribute("y", y);
      text.setAttribute("class", "node");
      text.setAttribute("font-size", fontSizes[phrase]);
      text.setAttribute("fill", colors[phrase]);
      text.setAttribute("font-weight", "bold");
      text.textContent = phrase;
      document.querySelector("svg").appendChild(text);
      
      // 计算子节点位置（根据层级动态调整间距）
      const spacing = 200 / (level + 1);
      const childY = y + 100;
      
      // 根据词组选择子节点内容（模拟二叉树分支规则）
      let leftPhrase, rightPhrase;
      
      if (phrase === "腰酸背痛") {
        leftPhrase = "爱吃";
        rightPhrase = "爱玩";
      } else if (phrase === "爱吃") {
        leftPhrase = "爱玩";
        rightPhrase = "爱睡觉";
      } else if (phrase === "爱玩") {
        leftPhrase = "爱睡觉";
        rightPhrase = "腰酸背痛";
      } else { // 爱睡觉
        leftPhrase = "腰酸背痛";
        rightPhrase = "爱吃";
      }
      
      // 如果不是最后一层，绘制子节点和连接线
      if (level < 3) {
        // 左子节点
        const leftX = x - spacing;
        drawBranch(x, y, leftX, childY);
        drawNode(leftX, childY, leftPhrase, level + 1);
        
        // 右子节点
        const rightX = x + spacing;
        drawBranch(x, y, rightX, childY);
        drawNode(rightX, childY, rightPhrase, level + 1);
      }
    }
    
    // 绘制树枝连接线
    function drawBranch(x1, y1, x2, y2) {
      const branch = document.createElementNS("http://www.w3.org/2000/svg", "line");
      branch.setAttribute("x1", x1);
      branch.setAttribute("y1", y1 + 15); // 微调起点位置
      branch.setAttribute("x2", x2);
      branch.setAttribute("y2", y2 - 20); // 微调终点位置
      branch.setAttribute("class", "branch");
      branch.setAttribute("stroke-linecap", "round");
      document.querySelector("svg").appendChild(branch);
    }
    
    // 从根节点开始绘制二叉树
    drawNode(400, 100, "腰酸背痛", 1);
  ]]></script>
</svg>
